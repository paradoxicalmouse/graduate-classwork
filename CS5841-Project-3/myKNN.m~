function [ prediction, bestk, errors ] = myKNN( X, Y, Xtest, k)
%myKNN uses cross validation approach to determine best value for k
%   Detailed explanation goes here
    
    classes = max(Y);
    [m, ~]  = size (X);
    
    function [ errors ] = leaveOneOut( X, Y, k )
       for i = 1 : m
          Z = X;
          Z(i) = [];
          W = Y;
          W(i) = [];
          prediction = classifyX( X(i), Z, W, k);,
       end
    end
    
    function [ prediction ] = classifyX ( x, X, Y, k ) 
        %classifyX classifies the given X using k nearest neighbors
        neighbors = findNearestNeighbors( x, X, Y, k );
        kClass = Zeroes(classes);
        for neighbor = 1 : k
            kClass(neighbors(neighbor)) = kClass(neighbors(neighbor)) + 1;
        end
        kClass = kClass ./ k;
        [~, prediction] = max(kClass);
    end

    function [ neighbors ] = findNearestNeighbors ( x, X, Y, k )
       %findNearestNeighbors finds the n nearest neighbors to a point, x
       %    from X
       distances = Inf(n, 2);
       for i = 1 : size(X)
           dist = norm(x - X(i,:));
           for j = 1 : n
               if dist < distances(j,1)
                   distances(n,2) = Y(i);
                   distances(n,1) = dist;
                   distances = sort(distances);
                   break;
               end
           end
       end
       neighbors = distances(:,2); 
    end


end

